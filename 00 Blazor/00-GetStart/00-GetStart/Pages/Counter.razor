@page "/counter"

@using _00_GetStart.Data
@using System.Threading;
<h1>Counter</h1>

<p>Current count: @currentCount</p>


<button class="btn btn-primary" @onclick="CallSignalR">Start SignaleR </button>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<br />
<div> 
    <ul>
        @for (int i = 0; i < 5; i++)
        {
            Thread.Sleep(2000);
            <li>@nummer</li>
        }

    </ul>

</div>

@code {
    int nummer = 0;
    int currentCount = 0;

    void CallSignalR()
    {
        // wat gaan we nu doen?

/*
 * var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

var message = document.getElementById("message");
var bt = document.getElementById("bt");

connection.on("ReceiveMessage", function a(second) {
    var li = document.createElement("li");
    var textnode = document.createTextNode(second);
    li.appendChild(textnode);
    message.appendChild(li);

});

connection.start();


bt.addEventListener("click", Send);
function Send() {

    connection.invoke("SendMessage");
}
 * */

    }


    void IncrementCount()
    {
        currentCount++;
    }

    protected override async Task OnInitializedAsync()
    {
        nummer = await Seconds.GetSec();
    }
}
