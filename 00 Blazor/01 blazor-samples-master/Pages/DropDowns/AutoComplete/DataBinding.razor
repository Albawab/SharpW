@page "/AutoComplete/DataBinding"

@using Syncfusion.EJ2.Blazor.DropDowns
@using Syncfusion.EJ2.Blazor.Data

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Data Binding";
    SampleBrowser.CurrentControlName = "AutoComplete";
    SampleBrowser.CurrentControlCategory = "AutoComplete";
    SampleBrowser.CurrentControl = SampleBrowser.Config.AutoComplete;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This sample demonstrates the different data binding supports of the AutoComplete. Type a character(s) in the AutoComplete element and the remaining characters are automatically filled based on the first matched item.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>The AutoComplete loads the data either from local data sources or remote data services through the <code>DataSource</code> property. It supports the data type of <code>array</code> or <code>DataManager</code>.</p>
        <p>
            The DataManager, that act as an interface between service endpoint and AutoComplete, will require the follwoing minimal
            information to interact with the service endpoint properly.
        </p>
        <ul>
            <li><code>DataManager->url</code> - Defines the service endpoint to fetch data.</li>
            <li>
                <code>DataManager->adaptor</code> - Defines the adaptor option. By default, <code>ODataAdaptor</code> is used for
                remote binding.
            </li>
        </ul>
        <p>
            The adaptor is responsible for processing response and request from/to the service endpoint.
            <code>syncfusion/ejs-data</code> package provides some predefined adaptors that are designed to interact with particular
            service endpoints. They are:
        </p>
        <ul>
            <li><code>UrlAdaptor</code> - Use this to interact any remote services.</li>
            <li><code>ODataAdaptor</code> - Use this to interact with OData endpoints.</li>
            <li><code>ODataV4Adaptor</code> - Use this to interact with OData V4 endpoints.</li>
            <li><code>WebApiAdaptor</code> - Use this to interact with Web API created under OData standards.</li>
            <li><code>WebMethodAdaptor</code> - Use this to interact with web methods.</li>
        </ul>
        <p>
            In this sample, the local data is bound to a collection of sports data and the remote data is bound to a collection of
            customer data as an instance of <code>DataManager</code>.
        </p>
        <p>
            More information on the data binding feature configuration can be found in the
            <a href=""https://ej2.syncfusion.com/blazor/documentation/autocomplete/data-binding/"" target=""_blank""> documentation section</a>.
        </p>"
    };
}
@*End:Hidden*@

<div class="control-section col-lg-12">
    <div id='local-data' class="col-lg-6">
        <div class='content'>
            <h4>Local Data</h4>
            <EjsAutoComplete TValue="string" Placeholder="e.g. Australia" DataSource="@Country" SortOrder="@Sort" Autofill=true>
                <AutoCompleteFieldSettings Value="Name"></AutoCompleteFieldSettings>
            </EjsAutoComplete>
        </div>
    </div>
    <div id='remote-data' class="col-lg-6">
        <div class='content'>
            <h4>Remote Data</h4>
            <EjsAutoComplete TValue="string" Placeholder="Select a name" Query="@RemoteQuery">
                <EjsDataManager Url="https://ej2services.syncfusion.com/production/web-services/api/Employees" Adaptor="@Syncfusion.EJ2.Blazor.Adaptors.WebApiAdaptor" CrossDomain=true></EjsDataManager>
                <AutoCompleteFieldSettings Value="FirstName"></AutoCompleteFieldSettings>
            </EjsAutoComplete>
        </div>
    </div>
</div>

<style>
    #local-data, #remote-data {
        max-width: 350px;
        margin: 25px 60px;
        padding-top: 15px;
    }
</style>

@code{
    public class Countries
    {
        public string Name { get; set; }

        public string Code { get; set; }
    }

    public List<Countries> Country = new List<Countries>
{
        new Countries() { Name = "Australia", Code = "AU" },
        new Countries() { Name = "Bermuda", Code = "BM" },
        new Countries() { Name = "Canada", Code = "CA" },
        new Countries() { Name = "Cameroon", Code = "CM" },
        new Countries() { Name = "Denmark", Code = "DK" },
        new Countries() { Name = "France", Code = "FR" },
        new Countries() { Name = "Finland", Code = "FI" },
        new Countries() { Name = "Germany", Code = "DE" },
        new Countries() { Name = "Greenland", Code = "GL" },
        new Countries() { Name = "Hong Kong", Code = "HK" },
        new Countries() { Name = "India", Code = "IN" },
        new Countries() { Name = "Italy", Code = "IT" },
        new Countries() { Name = "Japan", Code = "JP" },
        new Countries() { Name = "Mexico", Code = "MX" },
        new Countries() { Name = "Norway", Code = "NO" },
        new Countries() { Name = "Poland", Code = "PL" },
        new Countries() { Name = "Switzerland", Code = "CH" },
        new Countries() { Name = "United Kingdom", Code = "GB" },
        new Countries() { Name = "United States", Code = "US" },
    };
    public string RemoteQuery = "new ej.data.Query().select(['FirstName']).take(10).requiresCount()";
    public string Sort { get; set; } = "Ascending";
}

