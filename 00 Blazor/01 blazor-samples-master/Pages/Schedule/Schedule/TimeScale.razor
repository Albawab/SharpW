@page "/Schedule/TimeScale"

@using Syncfusion.EJ2.Blazor.Schedule
@using Syncfusion.EJ2.Blazor.DropDowns

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Timescale";
    SampleBrowser.CurrentControlName = "Scheduler";
    SampleBrowser.CurrentControlCategory = "Scheduler";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Schedule;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This demo depicts how to customize the grid lines of scheduler with different duration, count and also, how to
            apply template customizations on it.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
          In this demo, schedule has been allowed to display different number of grid lines per hour assigned with different duration
            to each cell, by making use of the
            <code>Interval</code> and
            <code>SlotCount</code> properties. The grid lines can also be disabled on schedule, by setting <code>false</code> to the
            <code>Enable</code> property available within
            <code>TimeScale</code>. The time header text can be customized by making use of the
            <code>MajorSlotTemplate</code> and
            <code>MinorSlotTemplate</code> properties.
        </p>"
    };
}
@*End:Hidden*@

<div class="col-lg-9 control-section">
    <div class="schedule-wrapper">
        <EjsSchedule TValue="ScheduleData.AppointmentData" @ref="ScheduleObj" Width="100%" Height="650px" SelectedDate="@(new DateTime(2019, 1, 10))">
            <ScheduleTimeScale Enable="@GridLine" Interval="@IntervalValue" SlotCount="@SlotValue"></ScheduleTimeScale>
            <ScheduleViews>
                <ScheduleView Option="View.Day"></ScheduleView>
                <ScheduleView Option="View.Week"></ScheduleView>
                <ScheduleView Option="View.TimelineDay"></ScheduleView>
                <ScheduleView Option="View.TimelineWeek"></ScheduleView>
            </ScheduleViews>
            <ScheduleEventSettings DataSource="@DataSource"></ScheduleEventSettings>
        </EjsSchedule>
    </div>
</div>
<div class="col-lg-3 property-section">
    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <table id='property' title='Properties' class='property-panel-table' style="width: 100%;">
                <tbody>
                    <tr style="height: 50px">
                        <td style="width: 30%">
                            <div>
                                Interval (in Minutes)
                            </div>
                        </td>
                        <td style="width: 70%;">
                            <div>
                                    <EjsDropDownList TValue="int" Value="@IntervalValue" DataSource="@IntervalData">
                                        <DropDownListEvents TValue="int" ValueChange="IntervalChanged"></DropDownListEvents>
                                        <DropDownListFieldSettings Text="Text" Value="Value"></DropDownListFieldSettings>
                                    </EjsDropDownList>
                            </div>
                        </td>
                    </tr>
                    <tr style="height: 50px">
                        <td style="width: 30%">
                            <div>
                                Slot Count
                            </div>
                        </td>
                        <td style="width: 70%;">
                            <div>
                                    <EjsDropDownList TValue="int" Value="@SlotValue" DataSource="@SlotCountsData">
                                        <DropDownListEvents TValue="int" ValueChange="SlotCountChange"></DropDownListEvents>
                                        <DropDownListFieldSettings Text="Text" Value="Value"></DropDownListFieldSettings>
                                    </EjsDropDownList>
                            </div>
                        </td>
                    </tr>
                    <tr style="height: 50px">
                        <td style="width: 30%">
                            <div>
                                Grid lines
                            </div>
                        </td>
                        <td style="width: 70%;">
                            <div>
                                    <EjsDropDownList TValue="string" Value="@GridStatus" DataSource="@TimeScaleOption">
                                        <DropDownListEvents TValue="string" ValueChange="TimeScaleOptionChange"></DropDownListEvents>
                                        <DropDownListFieldSettings Text="Text" Value="Value"></DropDownListFieldSettings>
                                    </EjsDropDownList>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>


@code{
    EjsSchedule<ScheduleData.AppointmentData> ScheduleObj;
    public List<ScheduleData.AppointmentData> DataSource = new ScheduleData().GetScheduleData();
    public int IntervalValue { get; set; } =  60 ;
    public int SlotValue { get; set; } =  6 ;
    public bool GridLine { get; set; } =  true ;
    public string GridStatus { get; set; } = "enable" ;
    public void IntervalChanged (ChangeEventArgs<int> args)
    {
        this.IntervalValue = args.Value;
    }
    public void SlotCountChange (ChangeEventArgs<int> args)
    {
        this.SlotValue = args.Value;
    }
    public void TimeScaleOptionChange (ChangeEventArgs<string> args)
    {
        this.GridLine = (args.Value == "enable") ? true : false;
    }
    public List<TimeScaleDropDownModel> IntervalData = new List<TimeScaleDropDownModel>()
    {
       new TimeScaleDropDownModel { Text = "30", Value = 30 },
       new TimeScaleDropDownModel { Text = "60", Value = 60 },
       new TimeScaleDropDownModel { Text = "90", Value = 90 },
       new TimeScaleDropDownModel { Text = "120", Value = 120 },
       new TimeScaleDropDownModel { Text = "150", Value = 150 },
       new TimeScaleDropDownModel { Text = "180", Value = 180 },
       new TimeScaleDropDownModel { Text = "240", Value = 240 },
       new TimeScaleDropDownModel { Text = "300", Value = 300 },
       new TimeScaleDropDownModel { Text = "720", Value = 720 }
    };
    public List<TimeScaleDropDownModel> SlotCountsData = new List<TimeScaleDropDownModel>()
    {
        new TimeScaleDropDownModel { Text = "1", Value = 1 },
        new TimeScaleDropDownModel { Text = "2", Value = 2 },
        new TimeScaleDropDownModel { Text = "3", Value = 3 },
        new TimeScaleDropDownModel { Text = "4", Value = 4 },
        new TimeScaleDropDownModel { Text = "5", Value = 5 },
        new TimeScaleDropDownModel { Text = "6", Value = 6 }
    };
    public List<TimeScaleDropDownModelOption> TimeScaleOption = new List<TimeScaleDropDownModelOption>()
    {
        new TimeScaleDropDownModelOption { Text = "Show", Value = "enable" },
        new TimeScaleDropDownModelOption { Text = "Hide", Value = "disable" }
    };
    public class TimeScaleDropDownModel
    {
        public string Text { get; set; }
        public int Value { get; set; }
    }
    public class TimeScaleDropDownModelOption
    {
        public string Text { get; set; }
        public string Value { get; set; }
    }
}