@page "/Charts/SemiPie"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Semi Pie";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"This sample illustrates the agriculture land percentages of various countries by using a pie series. It has options to change the angle and radius of the series."
    };
    SampleBrowser.Description = new string[] {
        @"<p> In this example, you can see how to render semi pie and doughnut chart. Using <code>startAngle</code>, <code>endAngle</code> properties, we can achieve this semi pie chart. Property panel to change the angle is provided with this sample.</p>

         <p> <code>Tooltip</code> is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>"
    };
}
@*End:Hidden*@

<div class="control-section">
    <EjsAccumulationChart Title="Mobile Browser Statistics" EnableAnimation="false">
        <AccumulationChartTooltipSettings Enable="true"></AccumulationChartTooltipSettings>
        <AccumulationChartLegendSettings Visible="false"></AccumulationChartLegendSettings>
        <AccumulationChartSeriesCollection>
            <AccumulationChartSeries DataSource="@dataSource" XName="xValue" YName="yValue" Name="Agricultural" StartAngle="270" EndAngle="90" Radius="90%" InnerRadius="40%" Explode="true">
                <AccumulationDataLabelSettings Visible="true" Name="text" Position="AccumulationLabelPosition.Outside">
                    <AccumulationChartDataLabelFont FontWeight="600"></AccumulationChartDataLabelFont>
                </AccumulationDataLabelSettings>
            </AccumulationChartSeries>
        </AccumulationChartSeriesCollection>
    </EjsAccumulationChart>
</div>

@code{
    public class PieData
    {
        public string xValue{ get; set; }
        public double yValue { get; set; }
        public string text { get; set; }
    }
    public List<PieData> dataSource = new List<PieData>
{
                new PieData { xValue =  "Australia", yValue = 53, text = "AUS:37%" },
                new PieData { xValue =  "China", yValue = 56, text = "CHN:15%" },
                new PieData { xValue =  "India", yValue = 61, text = "IND:16%" },
                new PieData { xValue =  "Japan", yValue = 19, text = "JPN:19%" },
                new PieData { xValue =  "South Africa", yValue = 79, text = "ZAF: 21%" },
                new PieData { xValue =  "United Kingdom", yValue = 71, text = "UK: 19%" },
                new PieData { xValue =  "United States", yValue = 45, text = "USA: 12%" },         
    };
}
