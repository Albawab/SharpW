@page "/Charts/StackedColumn100"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "100% Stacked Column";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample visualizes percentage of domestic product growth of four different countries with default 100% stacked column series in chart. 
        Legend in the sample shows the information about the series.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        In this example, you can see how to render and configure the 100% stacking column type charts. You can use <code>Border</code>,
        <code>Fill</code> properties to customize the vertical bar.
        </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>"
    };
}
@*End:Hidden*@

<div class="control-section">
    <EjsChart Title="Gross Domestic Product Growth">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis ValueType="Syncfusion.EJ2.Blazor.Charts.ValueType.Category" LabelIntersectAction="LabelIntersectAction.Rotate45">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
            <ChartAxisMinorGridLines Width="0"></ChartAxisMinorGridLines>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            <ChartAxisMinorTickLines Width="0"></ChartAxisMinorTickLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis Title="GDP (%) per Annum" RangePadding="ChartRangePadding.None" Interval="20">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisMajorGridLines Width="1"></ChartAxisMajorGridLines>
            <ChartAxisMinorGridLines Width="1"></ChartAxisMinorGridLines>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            <ChartAxisMinorTickLines Width="0"></ChartAxisMinorTickLines>
        </ChartPrimaryYAxis>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@dataSource" XName="x" YName="y" Width="2" Name="UK" Type="ChartSeriesType.StackingColumn100">
            </ChartSeries>
            <ChartSeries DataSource="@dataSource" XName="x" YName="y1" Width="2" Name="Germany" Type="ChartSeriesType.StackingColumn100">
            </ChartSeries>
            <ChartSeries DataSource="@dataSource" XName="x" YName="y2" Width="2" Name="France" Type="ChartSeriesType.StackingColumn100">
            </ChartSeries>
            <ChartSeries DataSource="@dataSource" XName="x" YName="y3" Width="2" Name="Italy" Type="ChartSeriesType.StackingColumn100">
            </ChartSeries>
        </ChartSeriesCollection>
        <ChartTooltipSettings Enable="true" Format="${point.x} : <b>${point.y} (${point.percentage}%)</b>"></ChartTooltipSettings>
    </EjsChart>
</div>

@code{
    public class StackedColumn100ChartData
    {
        public string x { get; set; }
        public double y { get; set; }
        public double y1 { get; set; }
        public double y2 { get; set; }
        public double y3 { get; set; }
    }
    public List<StackedColumn100ChartData> dataSource = new List<StackedColumn100ChartData>
    {
        new StackedColumn100ChartData { x= "2006", y= 900, y1= 190, y2= 250, y3= 150},
        new StackedColumn100ChartData { x= "2007", y= 544, y1= 226, y2= 145, y3= 120},
        new StackedColumn100ChartData { x= "2008", y= 880, y1= 194, y2= 190, y3= 115},
        new StackedColumn100ChartData { x= "2009", y= 675, y1= 250, y2= 220, y3= 125}   
    };
}
