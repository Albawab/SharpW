@page "/Charts/PieLegend"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Pie With Legend";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"This sample demonstrates pie chart with legend. For pie chart, you can change start angle of chart by Pie Angle in properties panel. Outer radius for pie chart can be changed by Outer Radius. Explode Index and explode radius for chart can be changed by Explode Radius and Explode Index."
    };
    SampleBrowser.Description = new string[] {
        @" In this example, you can see how to render and configure the pie chart. You can use border, fill properties to customize the pie point. dataLabel is used to represent individual data and its value.

        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices."
    };
}
@*End:Hidden*@

<div class="control-section">
    <EjsAccumulationChart SelectionMode="AccumulationSelectionMode.Point" Title="Mobile Browser Statistics">
        <AccumulationChartTooltipSettings Enable="false"></AccumulationChartTooltipSettings>
        <AccumulationChartLegendSettings ToggleVisibility=false Position="LegendPosition.Right" Height="28%" Width="44%"></AccumulationChartLegendSettings>
        <AccumulationChartSeriesCollection>
            <AccumulationChartSeries DataSource="@dataSource" XName="xValue" YName="yValue" Name="Revenue" InnerRadius="40%">
                <AccumulationDataLabelSettings Name="${point.y}" Visible="true">
                    <AccumulationChartDataLabelFont FontWeight="600" Color="white"></AccumulationChartDataLabelFont>
                </AccumulationDataLabelSettings>
            </AccumulationChartSeries>
        </AccumulationChartSeriesCollection>
    </EjsAccumulationChart>
</div>

@code{
    public class PieData
    {
        public string xValue { get; set; }
        public double yValue { get; set; }
        public string text { get; set; }
    }
    public List<PieData> dataSource = new List<PieData>
{
         new PieData { xValue =  "Net-tution and Fees", yValue = 21, text = "21%" },
         new PieData { xValue =  "Self-supporting Operations", yValue = 21, text = "21%" },
         new PieData { xValue =  "Private Gifts", yValue = 8, text = "8%" },
         new PieData { xValue =  "All Other", yValue = 8, text = "8%" },
         new PieData { xValue =  "Local Revenue", yValue = 4, text = "4%" },
         new PieData { xValue =  "State Revenue", yValue = 21, text = "21%" },
         new PieData { xValue =  "Federal Revenue", yValue = 16, text = "16%" },
    };
}
