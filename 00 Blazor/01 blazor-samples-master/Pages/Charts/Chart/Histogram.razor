@page "/Charts/Histogram"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Histogram Chart";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample visualizes the student's results of the final examination with histogram series in chart.
        Number of students between each interval is shown by using the data label.

    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        In this example, you can see how to render and configure the histogram type charts. Histogram type charts can provide a visual
        display of large amounts of data that are difficult to understand in a tabular or spreadsheet form. You can use the <code>Border</code> and <code>Fill</code>
        properties to customize the vertical rectangle. The <code>DataLabel</code> property is used to represent individual data and its value.

    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>"
    };
}
@*End:Hidden*@

<div class="control-section">
    <EjsChart Title="Examination Result">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>

        <ChartPrimaryXAxis Minimum="0" Maximum="100" Title="Score of Final Examination">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>

        <ChartPrimaryYAxis Minimum="0" Maximum="6" Interval="2" Title="Number of Students">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryYAxis>

        <ChartSeriesCollection>
            <ChartSeries DataSource="@ExamScores" YName="Y" Type="ChartSeriesType.Histogram" BinInterval="20" ShowNormalDistribution="true" ColumnWidth="0.99">
                <ChartMarker Visible="true" Height="10" Width="10">
                    <ChartDataLabel Visible="true" Position="LabelPosition.Top">
                        <ChartDataLabelFont Color="#ffffff" FontWeight="600"></ChartDataLabelFont>
                    </ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>

        <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
    </EjsChart>
</div>

@code{

    public class Data
    {
        public double Y { get; set; }
    }

    public List<Data> ExamScores = new List<Data>
{
       new Data { Y=5.250},
       new Data { Y=7.750},
       new Data { Y=8.275},
       new Data { Y=9.750},
       new Data { Y=36.250},
       new Data { Y=46.250},
       new Data { Y=56.250},
       new Data { Y=66.500},
       new Data { Y=76.625},
       new Data { Y=80.000},
       new Data { Y=97.750}
  };    
}
