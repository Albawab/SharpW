@page "/QueryBuilder/DefaultFunctionalities"

@using Syncfusion.EJ2.Blazor.QueryBuilder

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_griddata
@{
    SampleBrowser.CurrentSampleName = SampleBrowser.Config.QueryBuilder[0].Name;
    SampleBrowser.CurrentControlName = "QueryBuilder";
    SampleBrowser.CurrentControlCategory = "Forms";
    SampleBrowser.CurrentControl = SampleBrowser.Config.QueryBuilder;
    SampleBrowser.ActionDescription = new string[] {
        @"This sample demonstrates the default functionalities of the Query Builder component. Click the plus button to add a group or conditions."
    };
    SampleBrowser.Description = new string[] {
        @"The Query Builder component is used to create or edit filters. You can edit filters by changing the fields.",
        @"In mobile mode, the component is shown vertically.",
        @"More information about Query Builder can be found in this
            <a target=""_blank"" href=""https://ej2.syncfusion.com/aspnet-core-blazor/documentation/query-builder/getting-started/"">
                documentation section
            </a>."
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <EjsQueryBuilder Width="70%" Rule="@rule" DataSource="@DataSource">
        <QueryBuilderColumns>
            <QueryBuilderColumn Field="CustomerId" Label="CustomerId" Type="number"></QueryBuilderColumn>
            <QueryBuilderColumn Field="EmployeeId" Label="EmployeeId" Type="string"></QueryBuilderColumn>
            <QueryBuilderColumn Field="Verified" Label="Verified" Type="boolean" Values=@Values></QueryBuilderColumn>
            <QueryBuilderColumn Field="ShipName" Label="ShipName" Type="string"></QueryBuilderColumn>
            <QueryBuilderColumn Field="OrderDate" Label="OrderDate" Type="date" Format="dd/MM/yyyy"></QueryBuilderColumn>
            <QueryBuilderColumn Field="ShipCountry" Label="ShipCountry" Type="string"></QueryBuilderColumn>
            <QueryBuilderColumn Field="ShipAddress" Label="ShipAddress" Type="string"></QueryBuilderColumn>
        </QueryBuilderColumns>
    </EjsQueryBuilder>
</div>

@code{
    QueryBuilderRule rule = new QueryBuilderRule()
    {
        Condition = "and",
        Rules = new List<RuleModel>()
        {
            new RuleModel { Label="CustomerId", Field="CustomerId", Type="number", Operator="equal", Value = 1001 },
            new RuleModel { Label="EmployeeId", Field="EmployeeId", Type="string", Operator="equal", Value = "FLKIN" }
        }
    };

    public List<string> Values = new List<string> { "True", "False" };
    public List<Orders> DataSource { get; set; }
    protected override void OnInitialized()
    {
        DataSource = Orders.GetAllRecords();
    }
}

<style>

    .e-query-builder {
        margin: 0 auto;
    }
</style>
