@page "/Grid/Contextmenu"

@using Syncfusion.EJ2.Blazor.Grids

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_griddata
@{
    SampleBrowser.CurrentSampleName = "Context Menu";
    SampleBrowser.CurrentControlName = "DataGrid";
    SampleBrowser.CurrentControlCategory = "DataGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.DataGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>This sample demonstrates the usage of context menu in Grid component. Right click anywhere on the Grid to view context
        menu.
		</p>"
    };
    SampleBrowser.Description = new string[]{
        @"<p>Grid has options to show the context menu when right clicking on it. To configure the items in context menu, you should define either default or custom item in the <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridModel%601~ContextMenuItems.html'>ContextMenuItems</a></code> property. Each item will be shown based on its target. The default context menu items are,</p>
        <ul>
	        <li><code>Edit</code> - Edit the current record.</li>
	        <li><code>Delete</code> - Delete the current record.</li>
            <li><code>Save</code> - Save the edited record.</li>
	        <li><code>Cancel</code> - Cancel the edited state.</li>
	        <li><code>Copy</code> - Copy the selected records.</li>
	        <li><code>PdfExport</code> - Export the grid as Pdf format.</li>
	        <li><code>ExcelExport</code> - Export the grid as Excel format.</li>
	        <li><code>CsvExport</code> - Export the grid as CSV format.</li>
	        <li><code>SortAscending</code> - Sort the current column in ascending order.</li>
	        <li><code>SortDescending</code> - Sort the current column in descending order.</li>
	        <li><code>FirstPage</code> - Go to the first page.</li>
	        <li><code>PrevPage</code> - Go to the previous page.</li>
	        <li><code>LastPage</code> - Go to the last page.</li>
	        <li><code>NextPage</code> - Go to the next page.</li>
        </ul>
        <p>While using the Grid in a touch environment, touch and hold the Grid row cell to show the context menu.</p>
        <p>In this demo, Context Menu feature is enabled by defining the <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridModel%601~ContextMenuItems.html'>ContextMenuItems</a></code> property with the default items.</p>"
    };
}
@*End:Hidden*@


<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">

            <EjsGrid DataSource="@GridData" AllowSorting="true" AllowExcelExport="true" AllowPdfExport="true" ContextMenuItems="@(new List<object>() { "AutoFit", "AutoFitAll", "SortAscending", "SortDescending","Copy", "Edit", "Delete", "Save", "Cancel","PdfExport", "ExcelExport", "CsvExport", "FirstPage", "PrevPage","LastPage", "NextPage"})" AllowPaging="true">
                <GridEditSettings AllowAdding="true" AllowDeleting="true" AllowEditing="true"></GridEditSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(OrdersDetails.OrderID) HeaderText="Order ID" TextAlign="TextAlign.Right"  IsPrimaryKey="true" Width="120"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.CustomerID) HeaderText="Customer Name" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipName) HeaderText="Ship Name" Width="130"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Freight) HeaderText="Freight" Format="C2" TextAlign="TextAlign.Right"  Width="200"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCountry) HeaderText="Ship Country" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCity) HeaderText="Ship City" Width="150"></GridColumn>
                </GridColumns>
            </EjsGrid>

        </div>
    </div>
</div>

@code{

    public List<OrdersDetails> GridData { get; set; }

    protected override void OnInitialized()
    {
        GridData = OrdersDetails.GetAllRecords();
    }
}
