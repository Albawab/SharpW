@page "/Grid/FilterMenu"

@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.DropDowns

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_griddata
@{
    SampleBrowser.CurrentSampleName = "Menu Filter";
    SampleBrowser.CurrentControlName = "DataGrid";
    SampleBrowser.CurrentControlCategory = "DataGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.DataGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
			This sample demonstrates the way of filtering Grid columns using menu, checkbox and excel filter UI. In this sample, click the filtering
        icon from column header to show filter UI for a particular column. You can change the filter type from the properties
        panel.
		</p>"
    };
    SampleBrowser.Description = new string[]{
        @"<p>The filtering feature enables the user to view the reduced amount of records based on filter criteria. It can be enabled by setting <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridModel%601~AllowFiltering.html'>AllowFiltering</a></code> property as true. A filter bar row will be rendered next to header which allows the users to filter data by entering text within its cells.</p>
        <p>Filterbar uses two modes which specifies how to start filtering. They are,</p>
        <ul>
            <li><code>OnEnter</code> - Enabled by default, filter will be initiated after pressing <code>Enter</code> key.</li>
            <li><code>Immediate</code> - Filter will start after user stops typing. This uses a time delay of <i>1500ms</i> to initiate the filter after user has stopped typing. It can be overridden using the <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridFilterSettings~ImmediateModeDelay.html'>ImmediateModeDelay</a></code> property of the <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridFilterSettings.html'>GridFilterSettings</a></code> component.</li>
        </ul>
        <p>In this demo, you can type the text in the filter bar cells to filter the Grid. </p>
        <p>More information on the filter configuration can be found in this <a target='_blank' href='https://ej2.syncfusion.com/blazor/documentation/grid/filtering'>documentation section</a></p>" 
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <EjsGrid DataSource="@GridData" AllowFiltering="true" AllowPaging="true">
                <GridFilterSettings Type="Syncfusion.EJ2.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                <GridPageSettings PageCount="5"></GridPageSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(OrdersDetails.OrderID) HeaderText="Order ID" TextAlign="TextAlign.Right"  Width="120"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.CustomerID) HeaderText="Customer ID" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Freight) HeaderText="Freight" TextAlign="TextAlign.Right"  Width="120" Format="C2"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCity) HeaderText="Ship City" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCountry) HeaderText="Ship Country" Width="150"></GridColumn>
                </GridColumns>
            </EjsGrid>

        </div>
    </div>
</div>

@*<div class="col-lg-3 property-section">
    <h4 style="margin-top:38px;">Properties</h4>

    <table id="property" style="width: 73%; height: 105px;">
        <tr>
            <td class="left-side" style="padding-right:15px;">Filter Type</td>
            <td>
                <EjsDropDownList ID="types" Index="0" PopupWidth="110px" DataSource="@types" Change="@OnChange">
                    <DropDownListFieldSettings text="id" value="type"></DropDownListFieldSettings>
                </EjsDropDownList>
            </td>
        </tr>
    </table>
</div>*@

@code{

    public List<OrdersDetails> GridData { get; set; }

    public class FilterType
    {
        public string id { get; set; }

        public string type { get; set; }
    }

    List<FilterType> types = new List<FilterType>()
    {
        new FilterType(){ id= "Menu", type= "Menu" },
        new FilterType(){ id= "Excel", type= "Excel" },
    };

    public void OnChange(object args)
    {
        
    }

    protected override void OnInitialized()
    {
        GridData = OrdersDetails.GetAllRecords();
    }
}
