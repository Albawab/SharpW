@page "/Schedule/HideWeekend"

@using Syncfusion.EJ2.Blazor.Schedule

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Hide Non-Working Days";
    SampleBrowser.CurrentControlName = "Scheduler";
    SampleBrowser.CurrentControlCategory = "Scheduler";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Schedule;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This demo depicts the way to show or hide the weekend days of a week on Scheduler. The days whichever not specified in
            working days collections will be taken into consideration as weekend days.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
            In this demo, the
            <code>ShowWeekend</code> property is used either to show or hide the weekend days of a week and it is not applicable on
            <code>Workweek</code> view. By default, it is set to
            <code>true</code>. The days which are not a part of the working days collection of a Scheduler are usually considered as weekend days
            here.
        </p>
        <p>
            Here, the working days are defined as
            <code>[1, 3, 4, 5]</code> on Scheduler. Therefore, the remaining days (0, 2, 6 - Sunday, Tuesday and Saturday) are considered as weekend days
            and will be hidden from the views as the
            <code>ShowWeekend</code> property is set to false.
        </p>"
    };
}
@*End:Hidden*@
<div class="control-section">
    <div class="schedule-wrapper">
        <EjsSchedule TValue="ScheduleData.EmployeeEventData" Width="100%" Height="650px" SelectedDate="@(new DateTime(2018, 2, 15))" ShowWeekend="false" WorkDays="@WorkDays">
            <ScheduleWorkHours Start="08:00"></ScheduleWorkHours>
            <ScheduleViews>
                <ScheduleView Option="View.Day"></ScheduleView>
                <ScheduleView Option="View.Week"></ScheduleView>
                <ScheduleView Option="View.Month"></ScheduleView>
                <ScheduleView Option="View.WorkWeek"></ScheduleView>
                <ScheduleView Option="View.TimelineMonth"></ScheduleView>
            </ScheduleViews>
            <ScheduleEventSettings DataSource="@DataSource"></ScheduleEventSettings>
        </EjsSchedule>
    </div>
</div>

@code{
    public List<ScheduleData.EmployeeEventData> DataSource = new ScheduleData().GetEmployeeEventData();
    static int[] WorkDays = new int[] { 1, 3, 4, 5 };
}