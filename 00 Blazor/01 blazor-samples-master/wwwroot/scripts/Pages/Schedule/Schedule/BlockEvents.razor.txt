@page "/Schedule/BlockEvents"

@using Syncfusion.EJ2.Blazor.Schedule
@using System.Globalization
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Blocking Dates and Time";
    SampleBrowser.CurrentControlName = "Scheduler";
    SampleBrowser.CurrentControlCategory = "Scheduler";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Schedule;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This example shows how to block specific time intervals or days on the Scheduler.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
            In this example, few blocked events are defined to block the specific time range with the text “Unavailable”.
            No events can be created on those blocked time range as well as edited through it. These blocked events can be
            defined by setting <code>isBlock</code> field to true within the <code>EventSettings</code> and assigned
            altogether with the events <code>DataSource</code>.
        </p>"
    };
}
@*End:Hidden*@

<div class="control-section">
    <div class="content-wrapper">
        <EjsSchedule TValue="ScheduleData.BlockData" ModelType="@Model" Width="100%" Height="650px" CssClass="block-events" CurrentView="View.TimelineDay" SelectedDate="@(new DateTime(2018, 8, 1))">
            <ScheduleGroup Resources="@GroupData"></ScheduleGroup>
            <ScheduleResources>
                <ScheduleResource DataSource="@ResourceData" Field="EmployeeId" Title="Employees" Name="Employee" TextField="text" IdField="id" ColorField="color" AllowMultiple="false"></ScheduleResource>
            </ScheduleResources>
            <ScheduleTemplates>
                <ResourceHeaderTemplate>
                    @{
                        var resourceData = (context as TemplateArgs).ResourceData;
                        <div class="template-wrap">
                            <div class="employee-category">
                                <img class="employee-image" src="@UriHelper.ToAbsoluteUri($"css/schedule/images/{resourceData.Text}.png")" />
                                <div class="employee-name">@(resourceData.Text)</div>
                                <div class="employee-designation">@(resourceData.Designation)</div>
                            </div>
                        </div>
                    }
                </ResourceHeaderTemplate>
            </ScheduleTemplates>
            <ScheduleEventSettings DataSource="@DataSource"></ScheduleEventSettings>
            <ScheduleViews>
                <ScheduleView Option="View.Day"></ScheduleView>
                <ScheduleView Option="View.TimelineDay"></ScheduleView>
                <ScheduleView Option="View.TimelineMonth"></ScheduleView>
            </ScheduleViews>
        </EjsSchedule>
    </div>
</div>

@code{
    public List<ScheduleData.BlockData> DataSource = new ScheduleData().GetBlockData();
    public string[] GroupData { get; set; } = { "Employee" };
    public List<object> ResourceData { get; set; } = new List<object> {
        new { text = "Alice", id = 1, groupId = 1, color = "#bbdc00", designation = "Content writer" },
        new { text = "Nancy", id = 2, groupId = 2, color = "#9e5fff", designation = "Designer" },
        new { text = "Robert", id = 3, groupId = 1, color = "#bbdc00", designation = "Software Engineer" },
        new { text = "Robson", id = 4, groupId = 2, color = "#9e5fff", designation = "Support Engineer" },
        new { text = "Laura", id = 5, groupId = 1, color = "#bbdc00", designation = "Human Resource" },
        new { text = "Margaret", id = 6, groupId = 2, color = "#9e5fff", designation = "Content Analyst" }
    };
    public class TemplateArgs
    {
        public ResourceDataModel ResourceData { get; set; }
    }
    public class ResourceDataModel
    {
        public string Text { get; set; }
        public string Designation { get; set; }
    }
    public TemplateArgs Model = new TemplateArgs(); 
}
<style>

    .e-schedule .template-wrap {
        width: 100%;
    }

    .e-schedule .e-vertical-view .e-resource-cells {
        height: 58px;
    }

    .e-schedule .e-timeline-view .e-resource-left-td,
    .e-schedule .e-timeline-month-view .e-resource-left-td {
        width: 170px;
    }

    .e-schedule .e-resource-cells.e-child-node .employee-category,
    .e-schedule .e-resource-cells.e-child-node .employee-name {
        padding: 5px
    }

    .e-schedule .employee-image {
        width: 45px;
        height: 40px;
        float: left;
        border-radius: 50%;
        margin-right: 10px;
    }

    .e-schedule .employee-name {
        font-size: 13px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: normal;
    }

    .e-schedule .employee-designation {
        font-size: 10px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: normal;
    }
</style>
