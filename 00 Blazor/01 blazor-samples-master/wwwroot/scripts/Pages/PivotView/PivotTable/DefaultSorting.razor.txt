@page "/PivotTable/DefaultSorting"

@using Syncfusion.EJ2.Blazor.PivotView

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_productdetails
@{
    SampleBrowser.CurrentSampleName = "Default Sorting";
    SampleBrowser.CurrentControlName = "PivotTable";
    SampleBrowser.CurrentControlCategory = "PivotTable";
    SampleBrowser.CurrentControl = SampleBrowser.Config.PivotTable;
    SampleBrowser.ActionDescription = new string[] {
@"<p>
   This sample demonstrates ordering fields in row and column axes either in ascending or descending order.
</p>"
};
    SampleBrowser.Description = new string[] {
@"<p>
    Sorting can be applied either through code-behind or UI. Sort icons in fieldlist and groupingbar allow ordering the records in ascending or descending order.To achieve this in code-behind, use the
            <code>PivotViewSortSettings</code> object in the pivot table along with the following properties.
        </p>

    <table>
        <tr>
            <td style='vertical-align: top;padding: 10px 0;width:100px'>
                <code>Name :</code>
            </td>
            <td>Specifies the normal field.</td>
        </tr>
        <tr>
            <td style='vertical-align: top;padding: 4px 0;'>
                <code>Order :</code>
            </td>
            <td>Specifies the sort order and it should be 'Ascending' or 'Descending' in this scenario.</td>
        </tr>
    </table>

    <p>

    In this sample we have changed the sort order of the <b>Country</b> to <b>Descending</b> and <b>Year</b> to <b>None</b> in the code behind</p>

     <p>To achieve the same through UI, either enable grouping bar or field list or both to perform the sorting operation.</p>"
};
}
@*End:Hidden*@

<div class="control-section">
    <div class="content-wrapper">
        <EjsPivotView TValue="ProductDetails" ShowGroupingBar="true" Height="340">
            <PivotViewDataSourceSettings DataSource="@data" ExpandAll=false EnableSorting=true>
                <PivotViewColumns>
                    <PivotViewColumn Name="Year"></PivotViewColumn>
                    <PivotViewColumn Name="Quarter"></PivotViewColumn>
                </PivotViewColumns>
                <PivotViewRows>
                    <PivotViewRow Name="Country"></PivotViewRow>
                    <PivotViewRow Name="Products"></PivotViewRow>
                </PivotViewRows>
                <PivotViewValues>
                    <PivotViewValue Name="Sold" Caption="Units Sold"></PivotViewValue>
                    <PivotViewValue Name="Amount" Caption="Sold Amount"></PivotViewValue>
                </PivotViewValues>
                <PivotViewFilters>
                    <PivotViewFilter Name="Product_Categories" Caption="Product Categories"></PivotViewFilter>
                </PivotViewFilters>
                <PivotViewFormatSettings>
                    <PivotViewFormatSetting Name="Amount" Format="C" UseGrouping=true></PivotViewFormatSetting>
                    <PivotViewFormatSetting Name="Sold" Format="N" UseGrouping=true></PivotViewFormatSetting>
                </PivotViewFormatSettings>
                <PivotViewSortSettings>
                    <PivotViewSortSetting Name="Country" Order=Sorting.Descending></PivotViewSortSetting>
                    <PivotViewSortSetting Name="Year" Order=Sorting.None></PivotViewSortSetting>
                </PivotViewSortSettings>
            </PivotViewDataSourceSettings>
            <PivotViewGridSettings ColumnWidth="140"></PivotViewGridSettings>
        </EjsPivotView>
    </div>
</div>

<style>
    .e-pivotview {
        min-height: 200px;
    }
</style>

@code{

    public List<ProductDetails> data { get; set; }

    protected override void OnInitialized()
    {
        this.data = ProductDetails.GetProductData();
    }
   
}