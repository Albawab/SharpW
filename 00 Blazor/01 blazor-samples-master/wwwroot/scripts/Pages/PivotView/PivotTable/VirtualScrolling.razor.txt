@page "/PivotTable/VirtualScrolling"

@using Syncfusion.EJ2.Blazor.PivotView

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_virtualdata
@{
    SampleBrowser.CurrentSampleName = "Virtual Scrolling";
    SampleBrowser.CurrentControlName = "PivotTable";
    SampleBrowser.CurrentControlCategory = "PivotTable";
    SampleBrowser.CurrentControl = SampleBrowser.Config.PivotTable;
    SampleBrowser.ActionDescription = new string[] {
@"<p>
    This sample demonstrates the virtual scrolling option available for vertically and horizontally loading records
        and showing a large number of records with ease.
</p>"
};
    SampleBrowser.Description = new string[] {
@"  <p>The pivot table provides an optimized way to render rows and columns inside the view-port alone without
        calculating the value of the entire pivot.
        To enable virtual scrolling, set <code>EnableVirtualization</code> property to true.
    </p>"
};
}
@*End:Hidden*@

    <div class="control-section">
        <div class="content-wrapper">
            <EjsPivotView TValue="VirtualData" Width="800" Height="300" EnableVirtualization="true">
                <PivotViewDataSourceSettings DataSource="@data" EnableSorting="false" AlwaysShowValueHeader="true">
                    <PivotViewColumns>
                        <PivotViewColumn Name="year" Caption="Year"></PivotViewColumn>
                    </PivotViewColumns>
                    <PivotViewRows>
                        <PivotViewRow Name="id" Caption="Product Id"></PivotViewRow>
                    </PivotViewRows>
                    <PivotViewValues>
                        <PivotViewValue Name="amount" Caption="Sold Amount"></PivotViewValue>
                    </PivotViewValues>
                </PivotViewDataSourceSettings>
            </EjsPivotView>
            
        </div>
    </div>


<style>
    .e-pivotview {
        min-height: 200px;
    }
</style>

@code{

    public List<VirtualData> data { get; set; }

    protected override void OnInitialized()
    {
        this.data = VirtualData.GetVirtualData();
    }
}