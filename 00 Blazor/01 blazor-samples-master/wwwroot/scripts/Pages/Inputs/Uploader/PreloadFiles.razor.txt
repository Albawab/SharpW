@page "/Uploader/PreloadFiles"

@using Syncfusion.EJ2.Blazor.Inputs
@using Syncfusion.EJ2.Blazor.Buttons

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Preload Files";
    SampleBrowser.CurrentControlName = "FileUpload";
    SampleBrowser.CurrentControlCategory = "FileUpload";
    SampleBrowser.CurrentControl = SampleBrowser.Config.FileUpload;
    SampleBrowser.ActionDescription = new string[]
    {
        @"<p>This sample demonstrates how to pre-load the files of the Uploader. The already uploaded files are configured in file list to view and remove them.</p>"
                            };
    SampleBrowser.Description = new string[]
    {
        @"<p>The Uploader component allows to load initial list of files which are already uploaded in server. The preload files are useful to view and remove from server. Also, you can achieve state persistence on page refresh. </p>
        <p>For more information, you can refer to the Preload Files section from this
        <a target=""_blank"" href=""https://ej2.syncfusion.com/blazor/documentation/uploader/async/#preload-files""> documentation section</a>.</p>"
                            };
}
@*End:Hidden*@


<div class="col-lg-12 control-section">
    <div class="control_wrapper">
        <EjsUploader ID="UploadFiles" DropArea=".control-fluid" @ref="UploaderObj">
            <UploaderFiles>
                <UploaderUploadedFiles Name="Nature" Size=500000 Type=".png"></UploaderUploadedFiles>
                <UploaderUploadedFiles Name="TypeScript Succinctly" Size=12000 Type=".pdf"></UploaderUploadedFiles>
                <UploaderUploadedFiles Name="ASP.NET Webhooks" Size="500000" Type=".docx"></UploaderUploadedFiles>
            </UploaderFiles>
            <UploaderAsyncSettings SaveUrl="https://aspnetmvc.syncfusion.com/services/api/uploadbox/Save" RemoveUrl="https://aspnetmvc.syncfusion.com/services/api/uploadbox/Remove"></UploaderAsyncSettings>
        </EjsUploader>
    </div>
</div>

<div class="col-lg-4 property-section">
    <div id="property" title="Properties">
        <div style='margin-left: 50px; padding-top:25px;'>
            <EjsButton @onclick="@ClearFiles">Clear All</EjsButton>
        </div>
    </div>
</div>

<style>
    .control_wrapper {
        max-width: 500px;
        margin: auto;
    }

    .e-upload {
        width: 100%;
        position: relative;
        margin-top: 15px;
    }
</style>

@code {
    public EjsUploader UploaderObj;
    private void ClearFiles()
    {
        this.UploaderObj.ClearAll();
    }
}