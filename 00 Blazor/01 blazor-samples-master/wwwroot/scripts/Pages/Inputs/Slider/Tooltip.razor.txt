@page "/Slider/Tooltip"

@using Syncfusion.EJ2.Blazor.Inputs;
@using Syncfusion.EJ2.Blazor.DropDowns;
@using EJ2Inputs = Syncfusion.EJ2.Blazor.Inputs

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Tooltip";
    SampleBrowser.CurrentControlName = "Slider";
    SampleBrowser.CurrentControlCategory = "Slider";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Slider;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample demonstrates the rendering of Slider component with tooltip. Drag the thumb over the bar for selecting the values between min and max to enable the tooltip.
    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        <p>Slider component displays the tooltip to indicate the current value to the user.</p>

        <p>In this demo, we have demonstrated Tooltip with Default and Range Slider.</p>

        <p>Buttons can be used to increment or decrement the slider value. Buttons can be enabled in Slider using showButtons property</p>

        <p>Tooltip position and opening behavior can be customized through the placement and showOn properties from property pane.</p>

        <p>The dragInterval is used to drag both handles using the range bar which is also applicable only to the range slider.</p>
        </p>"
    };

}
@*End:Hidden*@

<div class="col-lg-8 control-section sb-property-border">
    <div class="content-wrapper">
        <div class="sliderwrap">
            <label class="userselect">Default Slider</label>
            <EjsSlider @bind-Value="@Default" ShowButtons="true">
                <SliderTooltipData IsVisible="true" Placement="CurrentTooltipPlacement" ShowOn="@CurrentTooltipShowOn"></SliderTooltipData>
            </EjsSlider>
        </div>
        <div class="sliderwrap">
            <label class="userselect">Range Slider</label>
            <EjsSlider Type=SliderType.Range @bind-Value="@Range" ShowButtons="true">
                <SliderTooltipData IsVisible="true" Placement="CurrentTooltipPlacement" ShowOn="@CurrentTooltipShowOn"></SliderTooltipData>
            </EjsSlider>
        </div>
    </div>
</div>

<div class="col-lg-4 property-section">
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div><div class="property-panel-content">
            <table id="property" title="Properties" class="property-panel-table">
                <tbody>
                    <tr>
                        <td style="width: 50%">
                            <div class="userselect">Placement</div>
                        </td>
                        <td style="width: 50%;padding-right: 10px">
                            <div>
                                <EjsDropDownList TValue="string" DataSource="@TooltipType" Placeholder="Select Ticks type">
                                    <DropDownListFieldSettings Text="Text" Value="Value"></DropDownListFieldSettings>
                                    <DropDownListEvents TValue="string" ValueChange="@(e => { Enum.TryParse<EJ2Inputs.TooltipPlacement>(e.Value, out CurrentTooltipPlacement); })"></DropDownListEvents>
                                </EjsDropDownList>
                            </div>
                        </td>
                    </tr>
                    <tr id="slider-showon">
                        <td style="width: 50%">
                            <div class="userselect">ShowOn</div>
                        </td>
                        <td style="width: 50%;padding-right: 10px">
                            <div>
                                <EjsDropDownList TValue="string" DataSource="@ShowOnType" Placeholder="Select ShowOn type">
                                    <DropDownListFieldSettings Text="Text" Value="Value"></DropDownListFieldSettings>
                                    <DropDownListEvents TValue="string" ValueChange="@(e => { Enum.TryParse<EJ2Inputs.TooltipShowOn>(e.Value, out CurrentTooltipShowOn); })"></DropDownListEvents>
                                </EjsDropDownList>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

@code{
    int Default = 30;
    int[] Range = new int[] { 30, 70 };
    EJ2Inputs.TooltipPlacement CurrentTooltipPlacement;
    EJ2Inputs.TooltipShowOn CurrentTooltipShowOn;

    List<DropDownModel> TooltipType = new List<DropDownModel>()
{
        new DropDownModel { Text = "Before", Value = "0" },
        new DropDownModel { Text = "After", Value = "1" },
    };

    List<DropDownModel> ShowOnType = new List<DropDownModel>()
{
        new DropDownModel { Text = "Focus", Value = "0" },
        new DropDownModel { Text = "Hover", Value = "1" },
        new DropDownModel { Text = "Always", Value = "2" },
        new DropDownModel { Text = "Auto", Value = "3" },
    };

    class DropDownModel
    {
        public string Id { get; set; }
        public string Text { get; set; }
        public string Value { get; set; }
    }
}

<style>
    .content-wrapper {
        width: 52%;
        margin: 0 auto;
        min-width: 185px;
    }

    .sliderwrap {
        margin-top: 45px;
        margin-left: -20%;
    }

        .sliderwrap label {
            padding-bottom: 26px;
            font-size: 13px;
            font-weight: 500;
            margin-top: 15px;
        }

    .userselect {
        -webkit-user-select: none; /* Safari 3.1+ */
        -moz-user-select: none; /* Firefox 2+ */
        -ms-user-select: none; /* IE 10+ */
        user-select: none; /* Standard syntax */
    }
</style>
