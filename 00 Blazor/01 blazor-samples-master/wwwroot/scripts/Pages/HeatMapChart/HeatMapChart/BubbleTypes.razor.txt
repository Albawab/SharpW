@page "/HeatMapChart/BubbleTypes"

@using Syncfusion.EJ2.Blazor.HeatMap
@using Syncfusion.EJ2.Blazor.DropDowns
@using EJ2HeatMap = Syncfusion.EJ2.Blazor.HeatMap

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_heatmapdata
@{
    SampleBrowser.CurrentSampleName = "Bubble Types";
    SampleBrowser.CurrentControlName = "HeatMapChart";
    SampleBrowser.CurrentControlCategory = "HeatMapChart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.HeatMapChart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample visualizes the female participation rate of the total female population in the country’s work force. In Bubble Heatmap, the data points can be visualized using bubble size, bubble shade and sector view types.
     </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
         In this example, you can see how to display the data points in bubble heatmap using multiple views such as bubble size, bubble shade and the sector. You can change the cell type to bubble by using the <code>TileType</code> property in <code>CellSettings</code>, and you can change the view of the bubble heatmap by using the <code>BubbleType</code> property in <code>CellSettings</code>.
</p>
        <p>Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>"
    };
}
@*End:Hidden*@
<div class="col-lg-8 control-section">
    <div class="control-section">
            <EjsHeatMap DataSource="@DataSource">
                <HeatMapTitle Text="Female Participation Rate in Labor Force for the Countries"></HeatMapTitle>
                <HeatMapXAxis Labels="@XLabels"
                              LabelRotation="45"
                              LabelIntersectAction="@EJ2HeatMap.LabelIntersectAction.None"
                              TextStyle="@TextStyle">
                </HeatMapXAxis>
                <HeatMapYAxis Labels="@YLabels"></HeatMapYAxis>
                <HeatMapPaletteSettings>
                    <HeatMapPalettes>
                        <HeatMapPalette Value="35" Color="#50A3B1"></HeatMapPalette>
                        <HeatMapPalette Value="45" Color="#78D1BD"></HeatMapPalette>
                        <HeatMapPalette Value="55" Color="#CAE8B4"></HeatMapPalette>
                        <HeatMapPalette Value="65" Color="#EDF8B6"></HeatMapPalette>
                        <HeatMapPalette Value="78" Color="#FFFFDA"></HeatMapPalette>
                    </HeatMapPalettes>
                </HeatMapPaletteSettings>
                <HeatMapCellSettings ShowLabel="false"
                                     Border="@Border"
                                     TileType="@EJ2HeatMap.CellType.Bubble"
                                     BubbleType="@bubbleType">
                </HeatMapCellSettings>
                <HeatMapLegendSettings Visible="true"></HeatMapLegendSettings>
            </EjsHeatMap>
            <div style="float: right; margin-right: 10px;">
                Source:
                <a href="https://data.worldbank.org" target='_blank'>https://data.worldbank.org/</a>
            </div>
        </div>
    </div>
<div class="col-lg-4 property-section">
    <div><h5>Bubble Type</h5></div>
    <EjsDropDownList TValue="string" PopupHeight="230px" Index="0" Placeholder="select Type" DataSource="@Bubble">
        <DropDownListFieldSettings Value="Id" Text="Text"></DropDownListFieldSettings>
        <DropDownListEvents TValue="string" ValueChange="@(e => { Enum.TryParse<EJ2HeatMap.BubbleType>(e.Value, out bubbleType); })"></DropDownListEvents>
    </EjsDropDownList>
</div>
@code{
    EJ2HeatMap.BubbleType bubbleType;
    string[] XLabels = new string[] { "Singapore", "Spain", "Australia", "Germany", "Belgium", "USA", "France", "UK" };
    string[] YLabels = new string[] { "1995", "2000", "2005", "2010", "2015" };
    FontModel TextStyle = new FontModel() { Size = "15px", FontWeight = "500", FontStyle = "Normal" };
    BorderModel Border = new BorderModel() { Width = 1 };
    double[,] DataSource = HeatMapData.TableBubbleData();
    List<DataModel> Bubble = new List<DataModel>();
    protected override void OnInitialized()
    {
        base.OnInitialized();
        Bubble.Add(new DataModel { Id = "0", Text = "Size" });
        Bubble.Add(new DataModel { Id = "1", Text = "Color" });
        Bubble.Add(new DataModel { Id = "2", Text = "Sector" });
    }
    class DataModel
    {
        public string Id { get; set; }
        public string Text { get; set; }
    }
}