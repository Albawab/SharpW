@page "/Grid/Reorder"

@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.DropDowns

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_griddata
@{
    SampleBrowser.CurrentSampleName = "Column Reorder";
    SampleBrowser.CurrentControlName = "DataGrid";
    SampleBrowser.CurrentControlCategory = "DataGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.DataGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
			This sample demonstrates reordering of the Grid columns.You can reorder columns by simply drag and drop in the desired column position.
		</p>"
    };
    SampleBrowser.Description = new string[]{
        @"<p>Reordering can be enabled by setting <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridModel%601~AllowReordering.html'>AllowReordering</a></code> property as true. Reordering can be done by dragging and dropping the column header from one index to another index within the Grid.</p>
        <p>The location where the column will be placed is indicated by two arrow symbols.</p>
        <p>In this demo, you can either reorder columns by drag and drop or by selecting column name and column index to reorder from the dropdown.</p>"
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <EjsGrid DataSource="@GridData" AllowReordering="true" AllowPaging="true">
                <GridPageSettings PageCount="5"></GridPageSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(OrdersDetails.OrderID) HeaderText="Order ID" IsPrimaryKey="true" TextAlign="TextAlign.Right"  Width="120"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.CustomerID) HeaderText="Customer ID" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Freight) HeaderText="Freight" TextAlign="TextAlign.Right"  Width="120" Format="C2"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCity) HeaderText="Ship City" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCountry) HeaderText="Ship Country" Width="150"></GridColumn>
                </GridColumns>
            </EjsGrid>

        </div>
    </div>
</div>

@*<div class="col-lg-3 property-section">
    <h4 style="margin-top:38px;">Properties</h4>

    <table id="property" style="width: 73%; height: 105px;">
        <tr>
            <td class="left-side" style="padding-right:15px;">Column</td>
            <td>
                <EjsDropDownList ID="column" Index="0" PopupWidth="110px" DataSource="@columns" Change="@OnChange">
                    <DropDownListFieldSettings text="id" value="name"></DropDownListFieldSettings>
                </EjsDropDownList>
            </td>
        </tr>
        <tr>
            <td class="left-side" style="padding-right:15px;">Column Index</td>
            <td>
                <EjsDropDownList ID="columnindex" Index="0" PopupWidth="110px" DataSource="@indexes" Change="@OnModeChange">
                    <DropDownListFieldSettings text="id" value="index"></DropDownListFieldSettings>
                </EjsDropDownList>
            </td>
        </tr>
    </table>
</div>*@

@code{

    public List<OrdersDetails> GridData { get; set; }

    public class Columns
    {
        public string id { get; set; }

        public string name { get; set; }
    }

    private List<Columns> columns = new List<Columns>()
    {
        new Columns(){ id= "Order ID", name= "Order ID" },
        new Columns(){ id= "Customer ID", name= "Customer ID" },
        new Columns(){ id= "Freight", name= "Freight" },
        new Columns(){ id= "Ship City", name= "Ship City" },
        new Columns(){ id= "Ship Country", name= "Ship Country" },
    };

    public class Index
    {
        public string id { get; set; }

        public string index { get; set; }
    }

    private List<Index> indexes = new List<Index>()
    {
        new Index(){ id= "1", index= "1" },
        new Index(){ id= "2", index= "2" },
        new Index(){ id= "3", index= "3" },
        new Index(){ id= "4", index= "4" },
        new Index(){ id= "5", index= "5" },
    };

    public void OnChange(object args)
    {
        
    }

    public void OnModeChange(object args)
    {
        
    }

    protected override void OnInitialized()
    {
        GridData = OrdersDetails.GetAllRecords();
    }
}
