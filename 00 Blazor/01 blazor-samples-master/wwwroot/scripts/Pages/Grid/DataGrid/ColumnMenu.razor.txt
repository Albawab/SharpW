@page "/Grid/ColumnMenu"

@using Syncfusion.EJ2.Blazor.Grids

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_griddata
@{
    SampleBrowser.CurrentSampleName = "Column Menu";
    SampleBrowser.CurrentControlName = "DataGrid";
    SampleBrowser.CurrentControlCategory = "DataGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.DataGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>This sample demonstrates the default functionalities of the ColumnMenu. Click on multiple icon of each column to open the column menu.</p>"
    };
    SampleBrowser.Description = new string[]{
        @"<p>Grid has option to show column menu on clicking the multiple icon in each column. The column menu has integrated options which allows the user to interact with features like sorting, grouping, filtering, column chooser and autofit. The column menu can be enabled by setting the <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridModel%601~ShowColumnMenu.html'>ShowColumnMenu</a></code> property value as <b>true</b>. The default items in the column menu are, </p>
        <ul>
	        <li><code>SortAscending</code> - Sort the current column in ascending order.</li>
	        <li><code>SortDescending</code> - Sort the current column in descending order.</li>
	        <li><code>Group</code> - Group the current column.</li>
	        <li><code>Ungroup</code> - Ungroup the current column.</li>
	        <li><code>AutoFit</code> - Auto fit current column.</li>
	        <li><code>AutoFitAll</code> - Auto fit all columns.</li>
	        <li><code>ColumnChooser</code> - Choose the column visibility.</li>
	        <li><code>Filter</code> - Show the filter option as given in <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridFilterSettings~Type.html'>Type</a></code> property of the <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridFilterSettings.html'>GridFilterSettings</a></code> component.</li>
        </ul>
        <p>In this demo, column menu functionality is enabled by defining <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridModel%601~ShowColumnMenu.html'>ShowColumnMenu</a></code> as <b>true</b> with sorting, grouping, filtering, column chooser and autofit options.</p>"
    };
}
@*End:Hidden*@


<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">

            <EjsGrid DataSource="@GridData" AllowGrouping="true" AllowSorting="true" AllowFiltering="true" AllowPaging="true" ShowColumnMenu="true">
               <GridFilterSettings Type="@Syncfusion.EJ2.Blazor.Grids.FilterType.CheckBox"></GridFilterSettings>
                <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(OrdersDetails.OrderID) HeaderText="Order ID" TextAlign="TextAlign.Right"  Width="200"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.CustomerID) HeaderText="Customer Name" Width="200"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Freight) HeaderText="Freight" Format="C2" TextAlign="TextAlign.Right"  EditType="EditType.NumericEdit"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipName) HeaderText="Ship Name"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCountry) HeaderText="Ship Country" Visible="false" Width="200"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCity) HeaderText="Ship City" Width="200"></GridColumn>
                </GridColumns>
            </EjsGrid>

        </div>
    </div>
</div>

@code{

    public List<OrdersDetails> GridData { get; set; }

    protected override void OnInitialized()
    {
        GridData = OrdersDetails.GetAllRecords();
    }
}
