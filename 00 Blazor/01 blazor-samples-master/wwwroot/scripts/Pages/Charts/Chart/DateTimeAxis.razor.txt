@page "/Charts/DateTimeAxis"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "DateTime Axis";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
       This sample demonstrates the rendering of date time axis in the chart with weather statistics analysis of Alaska for a year.
    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        DateTime data is used in this sample and data values are represented using dataLabel. Date time axis uses date time scale and displays the date time values as axis labels. To render dateTime axis, set <code>ValueType</code> in axis to <code>DateTime</code>.
            Format for the axis label will be calculated based on intervalType of axis or we can set the format through labelFormat property in axis.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>"
    };
}
@*End:Hidden*@

    <div class="control-section">
        <EjsChart Title="Alaska Weather Statistics - 2016" >
            <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
            <ChartPrimaryXAxis LabelFormat="MMM" ValueType="Syncfusion.EJ2.Blazor.Charts.ValueType.DateTime" EdgeLabelPlacement="EdgeLabelPlacement.Shift">
                <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
            </ChartPrimaryXAxis>
            <ChartPrimaryYAxis Minimum="-20" Maximum="30" Interval="10" EdgeLabelPlacement="EdgeLabelPlacement.Shift" LabelFormat="{value}°C">
                <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
                <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
                <ChartAxisMinorTickLines Width="0"></ChartAxisMinorTickLines>
            </ChartPrimaryYAxis>
            <ChartSeriesCollection>
                <ChartSeries DataSource="@chartData" XName="xValue" YName="yValue1" Opacity="1" Name="Warmest" Width=2 Type="ChartSeriesType.Line">
                    <ChartMarker Visible="true" Height="10" Width="10" Shape="ChartShape.Pentagon">
                        <ChartDataLabel Visible="true" Position="LabelPosition.Top">
                        </ChartDataLabel>
                    </ChartMarker>
                </ChartSeries>
                <ChartSeries DataSource="@chartData" XName="xValue" YName="yValue2" Opacity="1" Name="Coldest" Width=2 Type="ChartSeriesType.Line">
                    <ChartMarker Visible="true" Height="10" Width="10" Shape="ChartShape.Diamond">
                        <ChartDataLabel Visible="true" Position="LabelPosition.Top">
                        </ChartDataLabel>
                    </ChartMarker>
                </ChartSeries>
            </ChartSeriesCollection>
            <ChartLegendSettings Visible="true"></ChartLegendSettings>
        </EjsChart>
    </div>

@code{
    public class DateTimeData
    {
        public DateTime xValue { get; set; }
        public double yValue1 { get; set; }
        public double yValue2 { get; set; }
    }
    public List<DateTimeData> chartData = new List<DateTimeData>
            {
                new DateTimeData { xValue = new DateTime(2016, 3, 1), yValue1 = 6.3, yValue2 = -5.3},
                new DateTimeData { xValue = new DateTime(2016, 4, 1), yValue1 = 13.3, yValue2 = 1.0 },
                new DateTimeData { xValue = new DateTime(2016, 5, 1), yValue1 = 18.0, yValue2 = 6.9 },
                new DateTimeData { xValue = new DateTime(2016, 6, 1), yValue1 = 19.8, yValue2 = 9.4 },
                new DateTimeData { xValue = new DateTime(2016, 7, 1), yValue1 = 18.1, yValue2 = 7.6 },
                new DateTimeData { xValue = new DateTime(2016, 8, 1), yValue1 = 13.1, yValue2 = 2.6 },
                new DateTimeData { xValue = new DateTime(2016, 9, 1), yValue1 = 4.1, yValue2 = -4.9 },
                            };
}
