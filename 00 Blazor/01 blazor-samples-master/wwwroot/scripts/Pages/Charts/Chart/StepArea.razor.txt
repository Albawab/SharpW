@page "/Charts/StepArea"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Step Area";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample visualizes the data about electricity production by using renewable and non-renewable resources by using default step area series in the chart.
    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        In this example, you can see how to render and configure the StepArea type charts. This series forms the step line progress, by connecting points through vertical and horizontal lines with area filled. You can use <code>DashArray</code>, <code>Width</code>, <code>Fill</code> properties to customize the area. <code>Marker</code> and <code>DataLabel</code> are used to represent individual data and its value.
    </p>"
    };
}
@*End:Hidden*@

<div class="control-section">
    <EjsChart Title="Electricity- Production">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis EdgeLabelPlacement="EdgeLabelPlacement.Shift">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis Title="Production (Billion as kWh)" LabelFormat="{value}B">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryYAxis>
        <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@chartData" Name="Renewable" XName="xValue" Width="2"
                         YName="yValue" Type="ChartSeriesType.StepArea">
            </ChartSeries>
            <ChartSeries DataSource="@chartData" Name="Non-Renewable" XName="xValue" Width="2"
                         YName="yValue1" Type="ChartSeriesType.StepArea">
            </ChartSeries>
        </ChartSeriesCollection>
    </EjsChart>
</div>

@code{

        public class StepAreaChartData
        {
            public double xValue { get; set; }
            public double yValue { get; set; }
            public double yValue1 { get; set; }
        }

        public List<StepAreaChartData> chartData = new List<StepAreaChartData>
        {
            new StepAreaChartData { xValue = 2000, yValue = 416, yValue1 = 180 },
            new StepAreaChartData { xValue = 2001, yValue = 490, yValue1 = 240 },
            new StepAreaChartData { xValue = 2002, yValue = 470, yValue1 = 370 },
            new StepAreaChartData { xValue = 2003, yValue = 500, yValue1 = 200 },
            new StepAreaChartData { xValue = 2004, yValue = 449, yValue1 = 229 },
            new StepAreaChartData { xValue = 2005, yValue = 470, yValue1 = 210 },
            new StepAreaChartData { xValue = 2006, yValue = 437, yValue1 = 337 },
            new StepAreaChartData { xValue = 2007, yValue = 458, yValue1 = 258 },
            new StepAreaChartData { xValue = 2008, yValue = 500, yValue1 = 300 },
            new StepAreaChartData { xValue = 2009, yValue = 473, yValue1 = 173 },
            new StepAreaChartData { xValue = 2010, yValue = 520, yValue1 = 220 },
            new StepAreaChartData { xValue = 2011, yValue = 509, yValue1 = 309 },
        };
}
