@page "/TreeGrid/FilterBarTemplate"

@using Syncfusion.EJ2.Blazor.TreeGrid
@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.Data
@using Syncfusion.EJ2.Blazor
@using Syncfusion.EJ2.Blazor.Buttons
@using Syncfusion.EJ2.Blazor.DropDowns

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_treedata

@{
    SampleBrowser.CurrentSampleName = "Filterbar Template";
    SampleBrowser.CurrentControlName = "TreeGrid";
    SampleBrowser.CurrentControlCategory = "TreeGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.TreeGrid;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This sample demonstrates the template support of filterbar in TreeGrid.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>The Tree Grid provides a way to use custom control for filterbar using filter template feature. 
            </p>
            <p>In this demo, using FilterTemplate, we have rendered dropdownlist for Duration Column, from which a value can be selected to filter the column.</p>"
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <EjsTreeGrid @ref="TreeGrid"  Height=400 ModelType="@model" TValue="BusinessObject" IdMapping="TaskId" ParentIdMapping="ParentId" TreeColumnIndex="1" AllowFiltering="true">
                <EjsDataManager Json="@TreeGridData" Adaptor="Syncfusion.EJ2.Blazor.Adaptors.JsonAdaptor"></EjsDataManager>
                <TreeGridColumns>
                    <TreeGridColumn Field="TaskId" HeaderText="Task ID" Width="81" TextAlign="Syncfusion.EJ2.Blazor.Grids.TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="TaskName" HeaderText="Task Name" Width="199">                        
                    </TreeGridColumn>
                    <TreeGridColumn Field="Duration" HeaderText="Duration" Width="85" TextAlign="Syncfusion.EJ2.Blazor.Grids.TextAlign.Right">
                        <FilterTemplate>
                           <EjsDropDownList ID="Duration" TValue="string" DataSource="@dropdowndata" @bind-Value="@FilterValue">
								<DropDownListEvents ValueChange="change" TValue="string"></DropDownListEvents>
							</EjsDropDownList>
                        </FilterTemplate>
                    </TreeGridColumn>
                    <TreeGridColumn Field="Progress" HeaderText="Progress" Width="89" TextAlign="Syncfusion.EJ2.Blazor.Grids.TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Approved" HeaderText="Approved" Width="90" DisplayAsCheckBox="true" TextAlign="TextAlign.Center"></TreeGridColumn>
                    <TreeGridColumn Field="Priority" HeaderText="Priority" Width="80"></TreeGridColumn>
                </TreeGridColumns>
            </EjsTreeGrid>
        </div>
    </div>
</div>



@code{
    EjsTreeGrid<BusinessObject> TreeGrid;

    public BusinessObject[] TreeGridData { get; set; }

    public BusinessObject model = new BusinessObject();

    public List<string> dropdowndata { get; set; } = new List<string>() { "5", "1", "3", "2", "11", "12", "All"};

    public string FilterValue { get; set; } = "All";

    protected override void OnInitialized()
    {
        this.TreeGridData = TreeData.GetDefaultData().ToList().Cast<BusinessObject>().ToArray();
    }

    public void change(Syncfusion.EJ2.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        if (args.Value == "All")
        {
            TreeGrid.ClearFiltering();
        }
        else
        {
            int val = Convert.ToInt32(args.Value);
            TreeGrid.FilterByColumn("Duration", "equal", val);
        }
    }
}
