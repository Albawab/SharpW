@page "/"

@using Microsoft.Extensions.FileProviders
@using Syncfusion.Blazor.Inputs
@using System;
@using System.Collections.Generic;
@using System.IO;
@using System.Linq;
@using System.Net.Http.Headers;
@using System.Threading.Tasks;
@using Microsoft.AspNetCore.Hosting;
@using Microsoft.AspNetCore.Http;
@using Microsoft.AspNetCore.Http.Features;
@using Microsoft.AspNetCore.Mvc.Core;
@using Microsoft.AspNetCore.Mvc;
@using System.Net



<SfUploader ID="UploadFiles">
    <UploaderTemplates>
        <Template>
            <span class='name file-name'>@(context.Name)</span>
            <span class='file-size'>@(context.Size) bytes</span>
            <span class="upload-status">@(context.Status)</span>
            <span class="fa fa-download" title="Download" @onclick="@(e => OnClick(e, context.Name))"></span>
        </Template>
    </UploaderTemplates>
    <UploaderFiles>
        <UploaderUploadedFiles Name="Nature" Size=500000 Type=".png"></UploaderUploadedFiles>
        <UploaderUploadedFiles Name="TypeScript Succinctly" Size=12000 Type=".pdf"></UploaderUploadedFiles>
        <UploaderUploadedFiles Name="ASP.NET Webhooks" Size=500000 Type=".docx"></UploaderUploadedFiles>
    </UploaderFiles>
    <UploaderEvents ValueChange="OnChange" OnRemove="onRemove"></UploaderEvents>
</SfUploader>

@code {

    SfUploader uploaderObj;
    [Inject]
    protected IJSRuntime JsRuntime { get; set; }

    List<UploaderUploadedFiles> file = new List<UploaderUploadedFiles>();


    private void OnChange(UploadChangeEventArgs args)
    {
        foreach (var file in args.Files)
        {
            var path = @"path" + file.FileInfo.Name;
            FileStream filestream = new FileStream(path, FileMode.Create, FileAccess.Write);
            file.Stream.WriteTo(filestream);
            filestream.Close();
            file.Stream.Close();
        }
    }
    private void onRemove(RemovingEventArgs args)
    {
        foreach (var removeFile in args.FilesData)
        {
            if (File.Exists(Path.Combine(@"rootPath", removeFile.Name)))
            {
                File.Delete(Path.Combine(@"rootPath", removeFile.Name));
            }
        }
    }
    public async void OnClick(MouseEventArgs e, string filename)
    {
         DownloadFileAsync().GetAwaiter();
        // Console.ReadLine();
        // string file = System.IO.Path.GetFileName(filename);
        //Response.
        //await JsRuntime.InvokeVoidAsync("onUpload", "UploadFiles", filename);
    }

            private static async Task DownloadFileAsync()
        {
            WebClient client = new WebClient();
            await client.DownloadFileTaskAsync(@"C:\Users\AbdulAbdulbawab\Source\Sharp\00 Blazor\Syncfusion\38 Upload download file\BlazorApp1\Nature.png","Nature.png");
        }
}