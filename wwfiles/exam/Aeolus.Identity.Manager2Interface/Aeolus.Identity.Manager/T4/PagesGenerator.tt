<#@ template hostspecific="true" language="C#" debug="true" #>
<#@ assembly name="System.Core" #>
<#@ import namespace ="System" #>
<#@ import namespace ="System.IO" #>
<#@ import namespace ="System.Collections.Generic" #>
<#@ import namespace ="System.Reflection" #>
<#@ output extension=".razor" #><# 

    // var classes = File.ReadLines(@"C:\Users\AbdulAbdulbawab\Desktop\Sharp\000 Werk\HenE.Aeolus.Overzichten.Blazor\Aeolus.Overzichten.Blazor\T4\TextFileOfClasses.txt");
    // Load from text file
   List<string> Items= new List<string>();

    Assembly SampleAssembly = Assembly.LoadFrom("Aeolus.Overzichten.Domain.GemeenteIJsseldijk.dll");
        Type[] types = SampleAssembly.GetTypes();

    foreach (Type type in types)
    {
#>@page "/<#= LowerInitial(type.Name) #>" 

@using HenE.Aeolus.Overzichten.Domain.GemeenteIJsseldijk;
@inject IConfiguration configuration

<div>
    <BaseBodyComponent TItem="<#= type.Name #>" Url="@Url"></BaseBodyComponent>
</div>
@code{
        string Url;

    protected override void OnInitialized()
    {
        Url = configuration["Api:Adresses:Overzichten"];
    }
}

<#
        SaveOutput(type.Name+"Component" + ".razor");
   }
 #>

<#+
private void SaveOutput(string outputFileName) {
  string templateDirectory = Path.GetDirectoryName(Host.TemplateFile);
  string outputFilePath = Path.Combine(templateDirectory, @"..\Pages\", outputFileName);
  File.WriteAllText(outputFilePath, this.GenerationEnvironment.ToString()); 
  this.GenerationEnvironment.Remove(0, this.GenerationEnvironment.Length);
}#>

<#+
 private string LowerInitial(string name)
 { return name[0].ToString().ToLowerInvariant() + name.Substring(1); }
#>