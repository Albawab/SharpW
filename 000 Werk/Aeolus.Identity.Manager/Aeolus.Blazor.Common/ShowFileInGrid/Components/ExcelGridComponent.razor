@using System
@using System.ComponentModel
@using HenE.Aeolus.Blazor.Common.ShowFileInGrid.Model
@using HenE.Aeolus.Blazor.Common.ShowFileInGrid.Controller
@typeparam TItem

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGrid DataSource="@ShowFileInGridData" AllowPaging="true">
                <GridColumns>
                    @foreach (dynamic prop in type.GetProperties())
                    {
                        <GridColumn Field="@prop.Name" HeaderText="@(GetDescription(prop))" TextAlign="TextAlign.Center" CustomAttributes="@(new { @class = "e-attr" })"></GridColumn>
                    }
                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>

@code{
    [Parameter]
    public string FileName { get; set; }

    List<ExcelCelModel> ShowFileInGridData;
    public ShowExcelFileInGridController ShowFileInGridController;
    Type type;


    protected override void OnInitialized()
    {

        type = typeof(TItem);
        ShowFileInGridController = new ShowExcelFileInGridController();
    }

    /// <summary>
    /// Get de description van een property om bij de grid te kunnen zien.
    /// </summary>
    /// <param name="propertie">De property die haalt de discriptio vanuit.</param>
    /// <returns></returns>
    private string GetDescription(dynamic propertie)
    {
        AttributeCollection attributes = TypeDescriptor.GetProperties(typeof(TItem))[$"{propertie.Name}"].Attributes;
        DescriptionAttribute myAttribute = (DescriptionAttribute)attributes[typeof(DescriptionAttribute)];
        return myAttribute.Description != "" ? myAttribute.Description : propertie.Name;
    }


    protected override void OnParametersSet()
    {

        ShowFileInGridData = ShowFileInGridController.GetExcelItems(FileName);

    }

}
